{% assign producthandle = product.handle %}
<script>
  function variantSlugsToIds(slugs = []) {
    var variants = [];
    slugs.forEach(s => {
      var data = variantMaps[s];
      var key = data.id;
      variants.push({
        ...data,
        slug: s
      });
    })
    return variants;
  }

  function getProductVariants(product_slug, variant_slugs) {
    var product, variant_ids = [];
   product = productVariants[product_slug];
   variant_ids = variantSlugsToIds(variant_slugs);
    var variants = [];
    variant_ids.forEach(variant => {
      var p = product.filter(p => p.id === variant.id)[0];
       variants.push({...p, ...variant})
    });
    return variants
  }

  //window.performance.mark(window.markNames.bundleScriptParse.start);
  var allWedgePillowCoverVariants = {{all_products["replacement-wedge-pillow-covers"].variants | json}}
  var allYogaPillowCoverVariants = {{all_products["crystal-cove-yoga-replacement-covers"].variants | json}}
  var productVariants = {
    "wedge-pillow-cover": allWedgePillowCoverVariants,
    "yoga-pillow-cover": allYogaPillowCoverVariants
  }
  var variantMaps = {   
    "zuma-7-inch":  {
      id: 37366980608169,
      price: 1500
    },
    "zuma-10-inch": {
      id: 37366980640937,
      price: 1800
    },
    "zuma-12-inch": {
      id: 37366980673705,
      price: 2300
    },
    "crystal-cove-10-inch": {
      id: 37366980411561,
      price: 1999
     },
    "oceano-10-inch": {
      id: 37366980509865,
      price: 1999
    },
    "whitney-10-inch": {
      id: 37366980739241,
      price: 1499
    },
    "yoga-square-cover": {
      id: 37635796664489,
      price: 4599
    },
    "yoga-oval-cover": {
      id: 37636240965801,
      price: 2999
    },
    "yoga-pranayama-cover": {
      id: 37636273143977,
      price: 1999
    },
    "yoga-bolster-cover": {
      id: 37636341727401,
      price: 2499
    }
  }

  var allFoundationVariants = {{ all_products['foundation'].variants | json }};
  var allAdjustableVariants = {{ all_products['adjustable-bed-frame'].variants | json }};
  var allKidsPillowcaseVariants = {{all_products['organic-toddler-pillowcase'].variants | json}}
  var variantTopperBundle = {{ all_products['cedar-natural-luxe-topper-standalone'].variants | json }};
 var variantPillowBundle = [];//create empty pillow array to prevent errors when a mattress doesn't offer pillow bundle
  var saleFlag = true; //Switch to true to activate sale price display (note that it will activate for all product listed with a sale price)
  /*TODO: ability to turn sale on and off for individual products*/
  // Easy Foundation Bundle

{% case producthandle %}
  {% when "cedar-natural-luxe-mattress" %}
  //Cedar foundation
  var variantFoundations = [
      {//Queen
          id: 19294522540094,
          price: 27500,
          sale: 0
      },
      {//King
          id: 19294522572862,
          price: 35000,
          sale: 0
      },
      {//CalKing
          id: 19294522769470,
          price: 35000,
          sale: 0
      }
  ];
   var variantAdjustableBundle = [
       
       {//Queen
           id: 31082150625342,
           price: 79900,
           sale: 0,
       },
       {//King
           id: 31123066585150,
           price: 119800,
           sale: 0,
       },
       {//CAKing
           id: 0,
           price: 0
       }
   ];
   var variantTopperBundle = [
       
       {//Queen
           id: 31529554018366,
           price: 49900,
           sale: 39900,
       },
       {//King
           id: 31529554051134,
           price: 59900,
           sale: 49900,
       },
       {//CAKing
           id: 31529554083902,
           price: 59900,
           sale: 49900,
       }
   ];
   {% when "cypress-bamboo-gel-mattress" %}
   //Cedar color foundation
   var variantFoundations = [
       {//Twin
           id: 19294522310718,
           price: 22500,
       },
       {//Twin XL
           id: 19294522441790,
           price: 25000,
       },
       {//Full
           id: 19294522474558,
           price: 25000
       },
       {//Queen
           id: 19294522540094,
           price: 27500,
       },
       {//King
           id: 19294522572862,
           price: 35000,
       },
       {//CalKing
           id: 19294522769470,
           price: 35000
       }
   ];
    {% when "oceano-mattress" %}
    //Oceano blue color foundation
    var variantFoundations = [
        {//Twin
            id: 19308085641278,
            price: 22500,
        },
        {//Twin XL
            id: 19308085772350,
            price: 25000,
        },
        {//Full
            id: 19308085805118,
            price: 25000
        },
        {//Queen
            id: 19308085837886,
            price: 27500,
        },
        {//King
            id: 19308085870654,
            price: 35000,
        },
        {//CalKing
            id: 19308085903422,
            price: 35000
        },
        {//Split K
            id: 19308085870654,
            price: 35000
        }
    ];
     //Oceano Pillow Bundle
     var variantPillowBundle = [
         {//Twin - Standard
             id: 12210708742255,
             price: 10900,
             qt: 1,
               sale: 8900,
               size: "Standard"
         },
         {//Twin XL - Standard
             id: 12210708742255,
             price: 10900,
             qt: 1,
               sale: 8900,
               size: "Standard"
         },
         {//Full - Standard
             id: 12210708742255,
             price: 10900,
             qt: 2,
               sale: 8900,
               size: "Standard"
         },
         {//Queen
             id: 12210708775023,
             price: 11900,
             qt: 2,
               sale: 9900,
               size: "Queen"
         },
         {//King
             id: 12210708807791,
             price: 12900,
             qt: 2,
               sale: 10900,
               size: "King"
         },
         {//CA King
             id: 12210708807791,
             price: 12900,
             qt: 2,
               sale: 10900,
               size: "King"
         },
         {//Split King
             id: 12210708807791,
             price: 12900,
             qt: 2,
               sale: 10900,
               size: "King"
         }
     ];
     var variantAdjustableBundle = [
         {//Twin 
             id: 31082150559806,
             price: 59900,
             sale: 0,
         },
         {//Twin XL
             id: 31082150559806,
             price: 59900,
             sale: 0,
         },
         {//Full
             id: 0,
             price: 0
         },
         {//Queen
             id: 31082150625342,
             price: 79900,
             sale: 0,
         },
         {//King
             id: 31123066585150,
             price: 119800,
             sale: 0,
         },
         {//CAKing
             id: 0,
             price: 0
         },
         {//Split
             id: 31123066585150,
             price: 119800,
             sale: 0,
         }
     ];
     
      {% when "crystal-cove-mattress" %}
      //Crystal cove mattress foundation
      var variantFoundations = [
          {//Twin
              id: 18582182297662,
              price: 22500,
          },
          {//Twin XL
              id: 18582182330430,
              price: 25000,
          },
          {//Full
              id: 18582182363198,
              price: 25000
          },
          {//Queen
              id: 18582182395966,
              price: 27500,
          },
          {//King
              id: 18582182428734,
              price: 35000,
          },
          {//CalKing
              id: 18582182461502,
              price: 35000
          },
          {//Split King
              id: 18582182428734,
              price: 35000
          }
      ];
       var variantAdjustableBundle = [
           {//Twin 
               id: 31082150559806,
               price: 59900,
               sale: 0,
           },
           {//Twin XL
               id: 31082150559806,
               price: 59900,
               sale: 0,
           },
           {//Full
               id: 0,
               price: 0
           },
           {//Queen
               id: 31082150625342,
               price: 79900,
               sale: 0,
           },
           {//King
               id: 31123066585150,
               price: 119800,
               sale: 0,
           },
           {//CAKing
               id: 0,
               price: 0
           },
           {//Split
               id: 31123066585150,
               price: 119800,
               sale: 0,
           }
       ];
       //Crystal cove mattress Pillow Bundle
       var variantPillowBundle = [
           {//Twin
               id: 8119702585455,
               price: 8900,
               qt: 1,
               sale: 6900,
               size: "Standard"
           },
           {//Twin XL
               id: 8119702585455,
               price: 8900,
               qt: 1,
               sale: 6900,
               size: "Standard"
           },
           {//Full
               id: 8119702585455,
               price: 8900,
               qt: 2,
               sale: 6900,
               size: "Standard"
           },
           {//Queen
               id: 8119702618223,
               price: 9900,
               qt: 2,
               sale: 7900,
               size: "Queen"
           },
           {//King
               id: 8119702650991,
               price: 10900,
               qt: 2,
               sale: 8900,
               size: "King"
           },
           {//CAKing
               id: 8119702650991,
               price: 10900,
               qt: 2,
               sale: 8900,
               size: "King"
           },
           {//Split
               id: 8119702650991,
               price: 10900,
               qt: 2,
               sale: 8900,
               size: "King"
           }
       ];
       {% when "lilypad-kids-pillow" %}
      //Toggle Pillow Case
      var variantToddlerPillowCase = [
          {
              id: 4729802719294,
              price: 1999,
          }
       ];
       {% when "cypress-memory-foam-mattress" %}
       //Gray foundation 
       var variantFoundations = [
           {//Twin
               id: 18582182297662,
               price: 22500,
               sale: 0
           },
           {//Twin
               id: 18582182297662,
               price: 22500,
               sale: 0
           },
           {//Twin XL
               id: 18582182330430,
               price: 22500,
               sale: 0
           },
           {//Twin XL
               id: 18582182330430,
               price: 22500,
               sale: 0
           },
           {//Full
               id: 18582182363198,
               price: 25000,
               sale: 0
           },
           {//Full
               id: 18582182363198,
               price: 25000,
               sale: 0
           },
           {//Queen
               id: 18582182395966,
               price: 27500,
               sale: 0
           },
           {//Queen
               id: 18582182395966,
               price: 27500,
               sale: 0
           },
           {//King
               id: 18582182428734,
               price: 35000,
               sale: 0
           },
           {//King
               id: 18582182428734,
               price: 35000,
               sale: 0
           },
           {//CalKing
               id: 18582182461502,
               price: 35000,
               sale: 0
           },
           {//CalKing
               id: 18582182461502,
               price: 35000,
               sale: 0
           }
       ];

        var variantAdjustableBundle = [
            {//Twin 
                id: 31082150559806,
                price: 59900,
                sale: 0,
            },
            {//Twin 
                id: 31082150559806,
                price: 59900,
                sale: 0,
            },
            {//Twin XL
                id: 31082150559806,
                price: 59900,
                sale: 0,
            },
            {//Twin XL
                id: 31082150559806,
                price: 59900,
                sale: 0,
            },
            {//Full
                id: 0,
                price: 0
            },
            {//Full
                id: 0,
                price: 0
            },
            {//Queen
                id: 31082150625342,
                price: 79900,
                sale: 0,
            },
            {//Queen
                id: 31082150625342,
                price: 79900,
                sale: 0,
            },
            {//King
                id: 31123066585150,
                price: 119800,
                sale: 0,
            },
            {//King
                id: 31123066585150,
                price: 119800,
                sale: 0,
            },
            {//CAKing
                id: 0,
                price: 0
            },
            {//CAKing
                id: 0,
                price: 0
            }
        ];
      {% when "hybrid-latex-mattress" %}
      //Crystal cove mattress foundation
      var variantFoundations = [
          {//Twin
              id: 19294522310718,
              price: 22500,
          },
          {//Twin XL
              id: 19294522441790,
              price: 25000,
          },
          {//Full
              id: 19294522474558,
              price: 25000
          },
          {//Queen
              id: 19294522540094,
              price: 27500,
              sale: 0
          },
          {//King
              id: 19294522572862,
              price: 35000,
              sale: 0
          },
          {//CalKing
              id: 19294522769470,
              price: 35000,
              sale: 0
          },
          {//Split K
              id: 19294522572862,
              price: 35000
          }
      ];
       var variantAdjustableBundle = [
           {//Twin 
               id: 31082150559806,
               price: 59900,
               sale: 0,
           },
           {//Twin XL
               id: 31082150559806,
               price: 59900,
               sale: 0,
           },
           {//Full
               id: 0,
               price: 0
           },
           {//Queen
               id: 31082150625342,
               price: 79900,
               sale: 0,
           },
           {//King
               id: 31123066585150,
               price: 119800,
               sale: 0,
           },
           {//CAKing
               id: 0,
               price: 0
           },
           {//Split
               id: 31123066585150,
               price: 119800,
               sale: 0,
           }
       ];
      {% when "oceano-wedge-pillow" %}
        var variants = getProductVariants("wedge-pillow-cover", ["oceano-10-inch"])
        var addons = {
          "wedge-pillow-cover": {
            selector: $("#replacement-wedge-cover-bundle"), 
            price_selector: $("#replacement-wedge-cover-price"),
            variants
          }
        };
        var inventoryTracked = false;
      {% when "therapeutic-foam-bed-wedge"  %}
        var variants = getProductVariants("wedge-pillow-cover", ["zuma-7-inch", "zuma-10-inch", "zuma-12-inch"])
        var addons = {
          "wedge-pillow-cover": {
            selector: $("#replacement-wedge-cover-bundle"), 
            price_selector: $("#replacement-wedge-cover-price"),
            variants
          }
        };
        var inventoryTracked = false;
      {% when "crystal-cove-wedge-pillow" %}
        var variants = getProductVariants("wedge-pillow-cover", ["crystal-cove-10-inch"])
        var addons = {
          "wedge-pillow-cover": {
            selector: $("#replacement-wedge-cover-bundle"), 
            price_selector: $("#replacement-wedge-cover-price"),
            variants
          }
        };
        var inventoryTracked = false;
      {% when "whitney-gel-memory-foam-wedge-pillow" %}
        var variants = getProductVariants("wedge-pillow-cover", ["whitney-10-inch"])
        var addons = {
          "wedge-pillow-cover": {
            selector: $("#replacement-wedge-cover-bundle"), 
            price_selector: $("#replacement-wedge-cover-price"),
            variants
          }
        };
        var inventoryTracked = false;
      {% when "crystal-cove-meditation-pillow" %}
        var variants = getProductVariants("yoga-pillow-cover", ["yoga-oval-cover"])
        var addons = {
          "yoga-pillow-cover": {
            selector: $("#replacement-yoga-cover-bundle"), 
            price_selector: $("#replacement-yoga-cover-price"),
            variants
          }
        };
        var inventoryTracked = false;
      {% when "crystal-cove-yoga-bolster" %}
        var variants = getProductVariants("yoga-pillow-cover", ["yoga-bolster-cover"])
        var addons = {
          "yoga-pillow-cover": {
            selector: $("#replacement-yoga-cover-bundle"), 
            price_selector: $("#replacement-yoga-cover-price"),
            variants
          }
        };
        var inventoryTracked = false;
      {% when "crystal-cove-square-meditation-pillow" %}
        var variants = getProductVariants("yoga-pillow-cover", ["yoga-square-cover", "yoga-square-cover"]);
        var addons = {
          "yoga-pillow-cover": {
            selector: $("#replacement-yoga-cover-bundle"), 
            price_selector: $("#replacement-yoga-cover-price"),
            variants
          }
        };
        var inventoryTracked = false;
      {% when "crystal-cove-pranayama-bolster" %}
        var variants = getProductVariants("yoga-pillow-cover", ["yoga-pranayama-cover"]);
        var addons = {
          "yoga-pillow-cover": {
            selector: $("#replacement-yoga-cover-bundle"), 
            price_selector: $("#replacement-yoga-cover-price"),
            variants
          }
        };
        var inventoryTracked = false;
    {% else %}
      var variantToddlerPillowCase = [
          {
              id: 4729802719294,
              price: 1999,
          }
       ];
      //Gray foundation for Ojai, Crystal Cove and everything else
      var variantFoundations = [
          {//Twin
              id: 18582182297662,
              price: 22500,
          },
          {//Twin XL
              id: 18582182330430,
              price: 25000,
          },
          {//Full
              id: 18582182363198,
              price: 25000
          },
          {//Queen
              id: 18582182395966,
              price: 27500,
          },
          {//King
              id: 18582182428734,
              price: 35000,
          },
          {//CalKing
              id: 18582182461502,
              price: 35000
          },
          {//Split King
              id: 18582182428734,
              price: 35000
          }
      ];
       
       var variantAdjustableBundle = [
           {//Twin 
               id: 31082150559806,
               price: 59900,
           },
           {//Twin XL
               id: 31082150559806,
               price: 59900,
           },
           {//Full
               id: 0,
               price: 0
           },
           {//Queen
               id: 31082150625342,
               price: 79900,
           },
           {//King
               id: 31123066585150,
               price: 119800,
           }
       ];
       {% endcase %}
       {% if settings.display_subtotal and product.available %}
       //update price when changing quantity
       window.addEventListener('locationchange', function (event) {
        $("body").trigger("product.changed", [getVariantID()]);
      });
       function updatePricing() {
           //try pattern one before pattern 2
           var regex = /\d+,?\d*\.?\d*/g;
           var unitPriceTextMatch = jQuery('.product .price').text().match(regex);
           if (unitPriceTextMatch) {
               var unitPriceText = unitPriceTextMatch[0];
               var unitPrice = unitPriceText.replace(/[.|,]/g, '');
               var quantity = parseInt(jQuery('#quantity').val());
               var totalPrice = unitPrice * quantity;
               var sizeIndex = null;
               var $size = $("#product-selectors-option-0");
               if($size.length) {
                sizeIndex = $size[0].selectedIndex
               }
               // Kids PillowCase Bundle
               var $kidsPillowcase = $('#kidspillowcase');
               if($kidsPillowcase.length) {
                if($kidsPillowcase.prop('checked')) {
                  totalPrice += variantToddlerPillowCase[0].price;
                }
               }
              
              if(typeof addons !== "undefined") {
                for(var addon in addons) { 
                  var addon_product = addons[addon];
                  var $selector = addon_product.selector;
                  var variants = addon_product.variants;
                  if($selector.length) {
                    if($selector.prop("checked")) {
                      totalPrice += variants[0].price;
                    }
                  }
                }
              }

               // Easy Foundation Bundle
               if( $('#foundation').length ){
                   //console.log("clicked foundation");
                   if (jQuery('#foundation').prop('checked') && variantFoundations[sizeIndex]) {
                       totalPrice += variantFoundations[sizeIndex].price
                   }
               }
               // Pillow Bundle
               if( $('#pillow-bundle').length ){
                   if (jQuery('#pillow-bundle').prop('checked') && variantPillowBundle[sizeIndex]) {
                       totalPrice += variantPillowBundle[sizeIndex].price * variantPillowBundle[sizeIndex].qt
                  }
               }
               // Adjustable Bundle
               if( $('#adjustable-bundle').length ){
                   //console.log("clicked adjustable");
                   if (jQuery('#adjustable-bundle').prop('checked') && variantAdjustableBundle[sizeIndex]) {
                       totalPrice += variantAdjustableBundle[sizeIndex].price
                   }
               }
               // Cedar Luxe Topper Bundle
               if( $('#luxetopper-bundle').length ){
                   //console.log("clicked luxetopper");
                   if (jQuery('#luxetopper-bundle').prop('checked') && variantTopperBundle[sizeIndex]) {
                       totalPrice += variantTopperBundle[sizeIndex].price
                   }
               }
               var totalPriceText = Shopify.formatMoney(totalPrice, window.money_format);
               totalPriceText = totalPriceText.match(regex)[0];
               var regInput = new RegExp(unitPriceText, "g");
               var totalPriceHtml = jQuery('.product .price').html().replace(regInput, totalPriceText);
               jQuery('.product .total-price span').html(totalPriceHtml);
           }
       }

        jQuery('#quantity').on('change', updatePricing);

        {% endif %}

        var currentVariant = null;
        
        /* START selectCallback */
        var selectCallback = function (variant, selector) {
          updateShippingTime(variant.id);
          currentVariant = variant
          var addToCart = jQuery('#product-add-to-cart'),
            productPrice = jQuery('.product .price'),
            comparePrice = jQuery('.product .compare-price');
          // IF VARIANT
          if (variant) {
            if (variant.available) {
              // We have a valid product variant, so enable the submit button
              addToCart.removeClass('disabled').removeAttr('disabled').val('Add to Cart');
            } else {
              // Variant is sold out, disable the submit button
              addToCart.val('Sold Out').addClass('disabled').attr('disabled', 'disabled');
            }
            var $productSelector = $('#product-selectors-option-0');
            if($productSelector.length > 0) {
              var sizeIndex = $productSelector[0].selectedIndex;
            }
            var totalPrice = variant.price;
            var compareAtPrice = variant.compare_at_price;
/*****************FOUNDATION BUNDLE PRICE UPDATE*************************/
            if ($('#foundation').length) {
              // Update Foundation Pricing
              if (variantFoundations[sizeIndex]) {
                var foundation = variantFoundations[sizeIndex];
                
                //
                if(saleFlag && foundation.sale){
                    {% raw %}
                     jQuery("#easy-foundation-price").html("+" + Shopify.formatMoney(foundation.sale, "${{amount_no_decimals}}") + "&nbsp;<span style='text-decoration: line-through'>" + Shopify.formatMoney(foundation.price, "${{amount_no_decimals}}" + "</span>"));
                     {% endraw %} 
                }else{
                    {% raw %}
                    jQuery("#easy-foundation-price").text("+" + Shopify.formatMoney(foundation.price, "${{amount_no_decimals}}"));
                     {% endraw %} 
                }
                
              }

              // Disable checkbox if foundation is sold out
              var foundation = variantFoundations[sizeIndex];

//console.log("foundation OOS1");

              for (var i = 0; i < allFoundationVariants.length; i++) {
                if (allFoundationVariants[i].id === foundation.id) {
                  //console.log("foundation OOS2");
                  if (!allFoundationVariants[i].available) {
                    console.log("foundation OOS3");
                    jQuery("#foundation")
                        .prop("disabled", true)
                        .addClass("disabled")
                        .prop("checked", false).parent().addClass("disabled");
                    //jQuery(".squaredOne").addClass("disabled");
                      jQuery("#easy-foundation-price").text("Out of Stock").addClass("soldout");
                  } else {
                    jQuery("#foundation").prop("disabled", false).parent().removeClass("disabled");
                  }
                }
              }

              if (jQuery('#foundation').prop('checked') && variantFoundations[sizeIndex]) {
                  if(saleFlag && variantFoundations[sizeIndex].sale){
                      totalPrice += variantFoundations[sizeIndex].sale;
                      compareAtPrice += variantFoundations[sizeIndex].price;
                  }else{
                      totalPrice += variantFoundations[sizeIndex].price;
                      compareAtPrice += variantFoundations[sizeIndex].price;
                  }
              }
            }
                  
/*****************PRICE UPDATE*************************/
function parsePrice(price) {
  var updated_price = price,
  split_price = price.split(".");
  if(parseInt(split_price[1]) === 0) {
    updated_price = split_price[0];
  }
  return updated_price;
}
if (typeof addons !== "undefined") {
  for(var addon in addons) {

var addon_product = addons[addon],
    ad_variants = addon_product.variants;
    $ad_selector = addon_product.selector,
    $ad_price_selector = addon_product.price_selector;
    // adjust variants pricing
   var ad_variant = ad_variants[0];
   if(typeof sizeIndex !== "undefined") {
     ad_variant = ad_variants[sizeIndex];
   }
  if(ad_variant) {
      if(ad_variant.available === true){ //check if product variant exist (see id array above), if 0, deactivate box
        $ad_selector.prop("disabled", false).parent().removeClass("disabled");
                          
        if(saleFlag && ad_variant.sale){
          {% raw %}
            var price = parsePrice(Shopify.formatMoney(ad_variant.sale, "${{amount_no_decimals}}"))
           $ad_price_selector.html("+" + price + "&nbsp;<span style='text-decoration: line-through'>" + Shopify.formatMoney(ad_variant.price, "${{amount_no_decimals}}" + "</span>"));
          {% endraw %} 
        }else{
          {% raw %}
            var price = parsePrice(Shopify.formatMoney(ad_variant.price, "${{amount}}"));
            $ad_price_selector.text("+" + price);
            {% endraw %}
        }                  
      }else{
        $ad_selector
          .prop("disabled", true)
          .addClass("disabled")
          .prop("checked", false).parent().addClass("disabled");
        //jQuery(".squaredOne").addClass("disabled");
        $ad_price_selector.html("Unavailable").addClass("soldout");
      }
    }
    // Disable checkbox if sold out
    for (var i = 0; i < ad_variants.length; i++) {
      if (ad_variants[i].id === ad_variant.id) {
        if (!ad_variants[i].available) {
          $ad_selector
            .prop("disabled", true)
            .addClass("disabled")
            .prop("checked", false).parent().addClass("disabled");
          //jQuery(".squaredOne").addClass("disabled");
          $ad_price_selector.text("Out of Stock").addClass("soldout");
        } else {
          $ad_selector.prop("disabled", false).parent().removeClass("disabled");
        }
      }
    }

    if ($ad_selector.prop('checked') && ad_variant) {
      if(saleFlag && ad_variant.sale){
        totalPrice += ad_variant.sale;
        compareAtPrice += ad_variant.price;
      }else{
        totalPrice += ad_variant.price;
        compareAtPrice += ad_variant.price;
      }
    }
 
 }
}


/*****************KIDS PILLOWCASE BUNDLE PRICE UPDATE*************************/
            if ($('#kidspillowcase').length) {

                // Update Adjustable Pricing
                if (variantToddlerPillowCase[0]) {
                    var pillowcase = variantToddlerPillowCase[0];
                    if(pillowcase.id != 0){ //check if product variant exist (see id array above), if 0, deactivate box
                        jQuery("#kidspillowcase").prop("disabled", false).parent().removeClass("disabled");
                        
                        if(saleFlag && kidspillowcase.sale){
                            {% raw %}
                            jQuery("#kidspillowcase-bundle-price").html("+" + Shopify.formatMoney(pillowcase.sale, "${{amount_no_decimals}}") + "&nbsp;<span style='text-decoration: line-through'>" + Shopify.formatMoney(pillowcase.price, "${{amount_no_decimals}}" + "</span>"));
                            {% endraw %} 
                        }else{
                            {% raw %}
                            jQuery("#kidspillowcase-bundle-price").text("+" + Shopify.formatMoney(pillowcase.price, "${{amount_no_decimals}}"));
                             {% endraw %}
                        }
                      
                     }else{
                         jQuery("#kidspillowcase")
                             .prop("disabled", true)
                             .addClass("disabled")
                             .prop("checked", false).parent().addClass("disabled");
                         //jQuery(".squaredOne").addClass("disabled");
                         jQuery("#kidspillowcase-bundle-price").html("Unavailable").addClass("soldout");
                     }
                }

                // Disable checkbox if sold out
              for (var i = 0; i < allKidsPillowcaseVariants.length; i++) {
                if (allKidsPillowcaseVariants[i].id === pillowcase.id) {
                  if (!allKidsPillowcaseVariants[i].available) {
                    jQuery("#kidspillowcase")
                        .prop("disabled", true)
                        .addClass("disabled")
                        .prop("checked", false).parent().addClass("disabled");
                    //jQuery(".squaredOne").addClass("disabled");
                      jQuery("#kidspillowcase-bundle-price").text("Out of Stock").addClass("soldout");
                  } else {
                    jQuery("#kidspillowcase").prop("disabled", false).parent().removeClass("disabled");
                  }
                }
              }

                if (jQuery('#kidspillowcase').prop('checked') && variantToddlerPillowCase[0]) {
                    if(saleFlag && variantToddlerPillowCase[0].sale){
                        totalPrice += variantToddlerPillowCase[0].sale;
                        compareAtPrice += variantToddlePillowCase[0].price;
                    }else{
                        totalPrice += variantToddlerPillowCase[0].price;
                        compareAtPrice += variantToddlerPillowCase[0].price;
                    }
                }
            }
/****************************************************************/

/*****************PILLOW BUNDLE PRICE UPDATE*************************/
            if ($('#pillow-bundle').length) {
                // Update Pillow Pricing
                if (variantPillowBundle[sizeIndex]) {
                    var pillows = variantPillowBundle[sizeIndex];

                    if(saleFlag && pillows.sale){
                      {% raw %}
                          jQuery("#pillow-bundle-price").html("+" + Shopify.formatMoney(pillows.sale * pillows.qt, "${{amount_no_decimals}}") + "&nbsp;<span style='text-decoration: line-through'>" + Shopify.formatMoney(pillows.price * pillows.qt, "${{amount_no_decimals}}" + "</span>"));
                          jQuery(".column P.qt").text("Includes "+ pillows.qt + " " + pillows.size + " size pillow(s)");
                      {% endraw %}
                    }else{
                      {% raw %}
                          jQuery("#pillow-bundle-price").text("+" + Shopify.formatMoney(pillows.price * pillows.qt, "${{amount_no_decimals}}"));
                          jQuery(".column P.qt").text("Includes "+ pillows.qt + " " + pillows.size + " size pillow(s)");
                      {% endraw %}
                  }
                }

                if (jQuery('#pillow-bundle').prop('checked') && variantPillowBundle[sizeIndex]) {
                    if(saleFlag && variantPillowBundle[sizeIndex].sale){
                        totalPrice += variantPillowBundle[sizeIndex].sale * variantPillowBundle[sizeIndex].qt;
                        compareAtPrice += variantPillowBundle[sizeIndex].price * variantPillowBundle[sizeIndex].qt;
                    }else{
                        totalPrice += variantPillowBundle[sizeIndex].price * variantPillowBundle[sizeIndex].qt;
                        compareAtPrice += variantPillowBundle[sizeIndex].price * variantPillowBundle[sizeIndex].qt;
                    }
                }
            }
/****************************************************************/

/*****************ADJUSTABLE BUNDLE PRICE UPDATE*************************/
            if ($('#adjustable-bundle').length) {
                // Update Adjustable Pricing
                if (variantAdjustableBundle[sizeIndex]) {
                    var adjustable = variantAdjustableBundle[sizeIndex];
                    //console.log(adjustable);
                    if(adjustable.id != 0){ //check if product variant exist (see id array above), if 0, deactivate box
                        jQuery("#adjustable-bundle").prop("disabled", false).parent().removeClass("disabled");
                        
                        if(saleFlag && adjustable.sale){
                            {% raw %}
                            jQuery("#adjustable-bundle-price").html("+" + Shopify.formatMoney(adjustable.sale, "${{amount_no_decimals}}") + "&nbsp;<span style='text-decoration: line-through'>" + Shopify.formatMoney(adjustable.price, "${{amount_no_decimals}}" + "</span>"));
                            {% endraw %} 
                        }else{
                            {% raw %}
                            jQuery("#adjustable-bundle-price").text("+" + Shopify.formatMoney(adjustable.price, "${{amount_no_decimals}}"));
                             {% endraw %}
                        }
                      
                     }else{
                         jQuery("#adjustable-bundle")
                             .prop("disabled", true)
                             .addClass("disabled")
                             .prop("checked", false).parent().addClass("disabled");
                         //jQuery(".squaredOne").addClass("disabled");
                         jQuery("#adjustable-bundle-price").html("Unavailable").addClass("soldout");
                     }
                }

                // Disable checkbox if sold out
              var adjustable = variantAdjustableBundle[sizeIndex];

              for (var i = 0; i < allAdjustableVariants.length; i++) {
                if (allAdjustableVariants[i].id === adjustable.id) {
                  if (!allAdjustableVariants[i].available) {
                    jQuery("#adjustable-bundle")
                        .prop("disabled", true)
                        .addClass("disabled")
                        .prop("checked", false).parent().addClass("disabled");
                    //jQuery(".squaredOne").addClass("disabled");
                      jQuery("#adjustable-bundle-price").text("Out of Stock").addClass("soldout");
                  } else {
                    jQuery("#adjustable-bundle").prop("disabled", false).parent().removeClass("disabled");
                  }
                }
              }

                if (jQuery('#adjustable-bundle').prop('checked') && variantAdjustableBundle[sizeIndex]) {
                    if(saleFlag && variantAdjustableBundle[sizeIndex].sale){
                        totalPrice += variantAdjustableBundle[sizeIndex].sale;
                        compareAtPrice += variantAdjustableBundle[sizeIndex].price;
                    }else{
                        totalPrice += variantAdjustableBundle[sizeIndex].price;
                        compareAtPrice += variantAdjustableBundle[sizeIndex].price;
                    }
                }
            }
/****************************************************************/
                    
/*****************CEDAR LUXE TOPPER PRICE UPDATE*************************/
            if ($('#luxetopper-bundle').length) {
                // Update Topper Pricing
                if (variantTopperBundle[sizeIndex]) {
                    var topper = variantTopperBundle[sizeIndex];
                    //console.log(adjustable);
                    if(topper.id != 0){ //check if product variant exist (see id array above), if 0, deactivate box
                        jQuery("#luxetopper-bundle").prop("disabled", false).parent().removeClass("disabled");
                        
                        if(saleFlag && topper.sale){
                            {% raw %}
                            //jQuery("#cedarluxe-topper-price").html("+" + Shopify.formatMoney(topper.sale, "${{amount_no_decimals}}") + "&nbsp;<span style='text-decoration: line-through'>" + Shopify.formatMoney(topper.price, "${{amount_no_decimals}}" + "</span>"));
                            jQuery("#cedarluxe-topper-price").html(Shopify.formatMoney(topper.sale, "<span style='text-decoration: line-through;display: block;'>" + Shopify.formatMoney(topper.price, "${{amount_no_decimals}}" + "</span>&nbsp;" + "+${{amount_no_decimals}}")));
                            {% endraw %} 
                        }else{
                            {% raw %}
                            jQuery("#cedarluxe-topper-price").text("+" + Shopify.formatMoney(topper.price, "${{amount_no_decimals}}"));
                             {% endraw %}
                        }
                      
                     }else{
                         jQuery("#luxetopper-bundle")
                             .prop("disabled", true)
                             .addClass("disabled")
                             .prop("checked", false).parent().addClass("disabled");
                         //jQuery(".squaredOne").addClass("disabled");
                         jQuery("#cedarluxe-topper-price").text("Base Not Available in this size").addClass("soldout");
                     }
                }

                if (jQuery('#luxetopper-bundle').prop('checked') && variantTopperBundle[sizeIndex]) {
                    if(saleFlag && variantTopperBundle[sizeIndex].sale){
                        totalPrice += variantTopperBundle[sizeIndex].sale;
                        compareAtPrice += variantTopperBundle[sizeIndex].price;
                    }else{
                        totalPrice += variantTopperBundle[sizeIndex].price;
                        compareAtPrice += variantTopperBundle[sizeIndex].price;
                    }
                }
            }
/****************************************************************/
                    
                    
            // Regardless of stock, update the product price
            {% raw %}
            productPrice.html(parsePrice(Shopify.formatMoney(totalPrice, "${{amount}}")));
            {% endraw %}

            // Also update and show the product's compare price if necessary
            if (compareAtPrice > totalPrice) {
              productPrice.addClass("on-sale")

              {% raw %}
              comparePrice
                .html(Shopify.formatMoney(compareAtPrice, "${{amount_no_decimals}}"))
                .show();
              {% endraw %}
            } else {
              comparePrice.hide();
              productPrice.removeClass("on-sale");
            }

            {% if settings.use_color_swatch %}
            // BEGIN SWATCHES
            if (selector && selector.domIdPrefix) {
              var form = jQuery('#' + selector.domIdPrefix).closest('form');
              for (var i = 0, length = variant.options.length; i < length; i++) {
                var radioButton = form.find('.swatch[data-option-index="' + i + '"] :radio[value="' + variant.options[i] + '"]');

                if (radioButton.size()) {
                    radioButton.get(0).checked = true;
                }
              }
            }
            // END SWATCHES
            {% endif %}
            {% if settings.display_subtotal and product.available %}
            updatePricing();
            {% endif %}
          // END IF VARIANT
          } else {
            // The variant doesn't exist. Just a safeguard for errors, but disable the submit button anyway
            addToCart.val('Unavailable').addClass('disabled').attr('disabled', 'disabled');
          }

          // update variant inventory
          {% if settings.display_availability %}
          if (variant && variant.available) {
            if (variant.inventory_management != null) {
              jQuery(".product-inventory span").text(variant.inventory_quantity + " in stock");
            } else {
              jQuery(".product-inventory span").text("Many in stock");
            }
          } else {
            jQuery(".product-inventory span").text("Out of stock");
          }
          {% endif %}

          // display message for sheets and quilts when out of stock
          if (variant && variant.available) {
            if (variant.inventory_management != null) {
              if (variant.inventory_quantity < 1 && (typeof inventoryTracked !== "undefined" && inventoryTracked === true)) {
                //jQuery(".out-of-stock").show();
                //jQuery(".out-of-stock p").html("We’re currently making this item to order.<br> Please allow <b>up to 3 weeks</b> for crafting and shipping.");
                addToCart.val('Out of Stock').addClass('disabled').attr('disabled', 'disabled').html("Out of Stock");
              } else {
                //jQuery(".out-of-stock").hide();
                addToCart.val('Add to Cart').removeClass('disabled').removeAttr("disabled").html("Add to Cart");
              }
            }
          } else {
            //jQuery(".out-of-stock p").text("Out of stock");
            addToCart.val('Out of Stock').addClass('disabled').attr('disabled', 'disabled').html("Out of Stock");
          }

          /*begin variant image*/
          if (variant && variant.featured_image) {
            var originalImage = jQuery("#product-featured-image");
            var newImage = variant.featured_image;
            var element = originalImage[0];

            Shopify.Image.switchImage(newImage, element, function (newImageSizedSrc, newImage, element) {
              jQuery('#zt_list_product img').each(function () {
                var grandSize = jQuery(this).attr('src');
                grandSize = grandSize.replace('compact', 'grande');

                if (grandSize == newImageSizedSrc) {
                  jQuery(this).parent().trigger('click');
                  return false;
                }
              });
            });
          }
          /*end of variant image*/

          // updateAffirmAsLowAs(totalPrice);
          // Update affirm price
          var $affirm = $('.affirm-as-low-as');
          if($affirm.length > 0) {
          $affirm.attr('data-amount',totalPrice);
          
          affirm.ui.ready(function() {
            affirm.ui.refresh();
          });
          }
        };
        /* END selectCallback */

        jQuery(function ($) {
            
            /*$('#adjustable-bundle').change(function() {
                if($(this).is(":checked")){
                    $('#foundation').attr('checked', false);
                }    
            });

            $('#foundation').change(function() {
                if($(this).is(":checked")){
                    $('#adjustable-bundle').attr('checked', false);
                }    
            });   */
          
            
          // Pillow Bundle
          if ($('#pillow-bundle').length) {
            $("#pillow-bundle").on('change', function() {
              selectCallback(currentVariant)
            });
          }

          // Cedar topper
          if ($('#luxetopper-bundle').length) {
            $("#luxetopper-bundle").on('change', function() {
              selectCallback(currentVariant)
            });
          }

          // Easy Foundation Bundle
          if ($('#foundation').length) {
                $("#foundation").on('change', function() {
                    if($(this).is(":checked")){
                        $('#adjustable-bundle').attr('checked', false);
                    }  
                  selectCallback(currentVariant)
                });
          }
            
            // Adjustable Bundle
            if ($('#adjustable-bundle').length) {
                $("#adjustable-bundle").on('change', function() {
                    if($(this).is(":checked")){
                        $('#foundation').attr('checked', false);
                    } 
                    selectCallback(currentVariant)
                });
            }

            // Kids Pillowcase Bundle
            var $kidsPillowcase = $('#kidspillowcase');
            if($kidsPillowcase.length) {
              $kidsPillowcase.on('change', function() {
                  selectCallback(currentVariant)
              })
            }
            
            if(typeof addons !== "undefined") {
              for(var addon in addons) {
                var $selector = addons[addon].selector;
                if($selector.length) {
                  $selector.on('change', function() {
                    selectCallback(currentVariant)
                  })
                }
              }
            }
          {% if (product.available and product.has_only_default_variant) or (product.variants.size == 1 and product.variants[0].available ) %} 
           selectCallback({{product.variants[0] | json}});
          {% endif %}
          {% if product.available and product.variants.size > 1 %}
            new Shopify.CustomOptionSelectors('product-selectors', {
              product: {{ product | json }},
              onVariantSelected: selectCallback,
              enableHistoryState: true
            });
            {% comment %}
            Use color swatch and linked options(copyright by @carolineschnapp)
            {% endcomment %}

            {% if settings.use_color_swatch and product.available and product.options.size > 1 %}
              Shopify.linkOptionSelectors({{ product | json }});
            {% endif %}

            {% if settings.use_color_swatch != true %}
              jQuery('.single-option-selector').selectize();
              jQuery('.selectize-input input').attr("disabled", "disabled");
            {% endif %}
          {% endif %}

          // Add label if only one product option and it isn't 'Title'. Could be 'Size'.
          {% if product.options.size == 1 and product.options.first != 'Title' %}
            $('.selector-wrapper:eq(0)').prepend('<label>{{ product.options.first }}</label>');
          {% endif %}

          // Hide selectors if we only have 1 variant and its title contains 'Default'.
          {% if product.variants.size == 1 and product.variants.first.title contains 'Default' %}
            $('.selector-wrapper').hide();
          {% endif %}

          {% if settings.display_product_reviews %}
            var reviewsTimeout = setInterval(function () {
              if (jQuery(".spr-badge-caption").length > 0) {
                jQuery(".spr-badge-caption").on('click', function () {
                  jQuery('html,body').animate({
                       scrollTop: jQuery(".panel:last").offset().top
                  }, '400');

                  jQuery("#collapse-tab4").collapse('show');
                });

                clearInterval(reviewsTimeout);
              }
            }, 1000);
          {% endif %}
        });
</script>

<script>
  $(document).ready(function () {
      jQuery('#product-add-to-cart').click(function(e) {
          e.preventDefault();
          var toAdd = [];
          var sizeIndex = 0; //for products that don't have a size selector like yoga pillows or candles
          if ($('#product-selectors-option-0').length > 0){
            sizeIndex = $('#product-selectors-option-0')[0].selectedIndex;
          }
          {% case producthandle %}
              {% when "cedar-natural-luxe-mattress" %}
                  //Cedar Luxe Only because only 3 sizes are available
                  var variantFoundationIds = [19294522540094, 19294522572862, 19294522769470]
                  //var variantCedarTopperIds = [18665794601022, 18665794633790, 18665794666558] //built-in topper
                  var variantCedarTopperIds = [31529554018366, 31529554051134, 31529554083902] //standalone topper
                  //Adjustable base
                  var variantAdjustableIds = [31082150625342,31123066585150,0]

                  //uncomment to include topper automatically
                  /*toAdd = [{
                      id: variantCedarTopperIds[sizeIndex],
                      quantity: 1
                  }];*/

               {% when "oceano-mattress" %}
                   //Twin, Twin XL, Full, Q, K, CK, SK
                   var variantFoundationIds = [19308085641278, 19308085772350, 19308085805118, 19308085837886, 19308085870654, 19308085903422, 19308085870654]
                   var variantPillowBundle = [12210708742255, 12210708742255, 12210708742255, 12210708775023, 12210708807791, 12210708807791, 12210708807791]
                   var variantPillowBundleQt = [1, 1, 2, 2, 2, 2, 2]
                   //Adjustable base
                   var variantAdjustableIds = [
                       31082150559806,                
                       31082150559806, 
                       0,
                       31082150625342, 
                       31123066585150, 
                       0,
                       31123066585150
                   ]

                {% when "hybrid-latex-mattress" %}
                   //Twin, Twin XL, Full, Q, K, CK, SPLIT
                   var variantFoundationIds = [
                     19294522310718, 
                     19294522441790, 
                     19294522474558, 
                     19294522540094, 
                     19294522572862, 
                     19294522769470, 
                     19294522572862
                   ]
                   
                   //Adjustable base
                   var variantAdjustableIds = [
                       31082150559806,                
                       31082150559806, 
                       0,
                       31082150625342, 
                       31123066585150, 
                       0,
                       31123066585150
                   ]
                   
                {% when "crystal-cove-mattress" %}
                   //Twin, Twin XL, Full, Q, K, CK, Split
                   var variantFoundationIds = [18582182297662, 18582182330430, 18582182363198, 18582182395966, 18582182428734, 18582182461502, 18582182428734]
                   var variantPillowBundle = [8119702585455, 8119702585455, 8119702585455, 8119702618223, 8119702650991, 8119702650991, 8119702650991]
                   var variantPillowBundleQt = [1, 1, 2, 2, 2, 2, 2]
                   //Adjustable base
                   var variantAdjustableIds = [
                       31082150559806,                
                       31082150559806, 
                       0,
                       31082150625342, 
                       31123066585150, 
                       0,
                       31123066585150
                   ]
                   
                {% when "cypress-memory-foam-mattress" %}
                // Because drop down has 12 options, need 12 options for add-ons to match index position
                    //Twin, Twin XL, Full, Q, K, CK
                    var variantFoundationIds = [
                        18582182297662, 
                        18582182297662, 
                        18582182330430,
                        18582182330430,
                        18582182363198, 
                        18582182363198,
                        18582182395966, 
                        18582182395966,
                        18582182428734, 
                        18582182428734,
                        18582182461502, 
                        18582182461502
                    ]
                    //Adjustable base
                    //Twin 11, Twin 13, Twin XL 11, XL 11, ..., Full, Q, K, CK
                    var variantAdjustableIds = [
                        
                        31082150559806, 
                        31082150559806, 
                        
                        31082150559806, 
                        31082150559806, 
                        
                        0,
                        0,
                        
                        31082150625342, 
                        31082150625342, 
                        
                        31123066585150, 
                        31123066585150, 
                        
                        0,
                        0
                    ]
                   
               {% else %}
                   //Twin, Twin XL, Full, Q, K, CK, SplitK
                   var variantFoundationIds = [18582182297662, 18582182330430, 18582182363198, 18582182395966, 18582182428734, 18582182461502, 18582182428734]
                   
                   //Adjustable base
                   //Twin, Twin XL, Full, Q, K, CK, SPLIT
                   var variantAdjustableIds = [31082150559806, 31082150559806, 0000, 31082150625342, 31123066585150, 0000, 31123066585150]
                   var variantToddlerPillowcaseIds = [32465454825534];
           {% endcase %}

            if(typeof addons !== "undefined") {
              for(var addon in addons) {
                var addon_product = addons[addon],
                  $ad_selector = addon_product.selector,
                  ad_variants = addon_product.variants;
                if($ad_selector.prop("checked")) {
                  toAdd.push({
                    id: ad_variants[sizeIndex].id,
                    quantity: parseInt($("#quantity").val()) || 1
                  })
                }
              }
            } else {
            // Cedar Luxe Topper
              if (jQuery('#luxetopper-bundle').prop('checked')) {
                toAdd.push({
                    id: variantCedarTopperIds[sizeIndex],
                    quantity: 1
                })
              }

              // Easy Foundation Bundle
              if (jQuery('#foundation').prop('checked')) {
                toAdd.push({
                    id: variantFoundationIds[sizeIndex],
                    quantity: 1
                })
              }
  
                // Pillow Bundle
              if (jQuery('#pillow-bundle').prop('checked')) {
                toAdd.push({
                    id: variantPillowBundle[sizeIndex],
                    quantity: variantPillowBundleQt[sizeIndex]
                })
              }
              
              // Adjustable Bundle
              if (jQuery('#adjustable-bundle').prop('checked')) {
                toAdd.push({
                    id: variantAdjustableIds[sizeIndex],
                    quantity: 1
                })
              }

              if($("#kidspillowcase").prop('checked')) {
                toAdd.push({
                  id: variantToddlerPillowcaseIds[0],
                  quantity: parseInt($("#quantity").val()) || 1
                })
              }
            }
            function moveAlong(){
                if (toAdd.length) {
                    $.ajax({
                        type: 'POST',
                        url: '/cart/add.js',
                        data: toAdd.shift(),
                        dataType: 'json',
                        success: function() {
                            moveAlong();
                        },
                        error: function(error) {
                            console.log('error', error);
                        }
                    });
                } else {
                    $('#add-to-cart-form').submit();
                }
            };

            moveAlong();
      });
  });

  $("body").on("product.changed", function(ev, id) {
    updateShippingTime(id);
  });

  function parseDays(days) {
    days = parseFloat(days) || 0;
    if(typeof days === "undefined" || days === 0) return "Ships free";

    var parsed_to_weeks = days/5;
    if(parsed_to_weeks > 1.5) {
      prod_time = `Ships free within ${Math.ceil(parsed_to_weeks)} weeks`;
    } else {
      prod_time = `Ships free in ${days} days`;
    }
    return prod_time;
  }

  function updateShippingTime(id) {
    var prod_time = parseDays(),
      container = $(".js-production-time"),
      defaultDays = container.data("default") || 0;
      
    if(defaultDays > 0) {
      prod_time = parseDays(defaultDays);
    }

    if(id && bwh && "product_variants" in bwh) {
      var days = bwh.product_variants[id];
      if(days && "production_time" in days) {
        prod_time = parseDays(days.production_time);
      }

    }
    $(".js-production-time").text(prod_time);
  
  }

  function getVariantID() {
    var url = new URLSearchParams(window.location.search);
    return url.get("variant");
  }
//window.performance.mark(window.markNames.bundleScriptParse.end);
</script>
